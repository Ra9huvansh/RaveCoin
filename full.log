No files changed, compilation skipped

Ran 1 test for test/fuzz/Invariants.t.sol:Invariants
[PASS] invariant_getterFunctionsNeverRevert() (runs: 128, calls: 16384, reverts: 0)

╭----------+-------------------+-------+---------+----------╮
| Contract | Selector          | Calls | Reverts | Discards |
+===========================================================+
| Handler  | depositCollateral | 5478  | 0       | 0        |
|----------+-------------------+-------+---------+----------|
| Handler  | mintDsc           | 5506  | 0       | 0        |
|----------+-------------------+-------+---------+----------|
| Handler  | redeemCollateral  | 5400  | 0       | 0        |
╰----------+-------------------+-------+---------+----------╯

Logs:
  0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Bound result 23426406477585898314935737852
  Bound result 6063
  Bound result 2
  Bound result 5
  Bound result 6146
  Bound result 1953
  Bound result 325
  Bound result 468554426314852194399338305
  Bound result 94417706661926218
  Bound result 5722
  Bound result 1515
  Bound result 21457949947591930286457619466
  Bound result 3273
  Bound result 176071867168575165026120
  Bound result 26872985171108454442329333349
  Bound result 2864944346500908670089066581
  Bound result 10530349394728893960333879327
  Bound result 7592
  Bound result 1220
  Bound result 1069
  Bound result 4469
  Bound result 1
  Bound result 42519761
  Bound result 46916350299036364971822585257
  Bound result 4394713158243574
  Bound result 66620424383069200198470859218
  Bound result 330901009104711829
  Bound result 1101272837832531049290894459
  Bound result 10015
  Bound result 16
  Bound result 2463
  Bound result 3627
  Bound result 59291862883235609632189568389
  Bound result 703
  Bound result 36546367675569193495948340828
  Bound result 10978653575205358858764448985
  Bound result 815409452051376420499298
  Bound result 79228162514264337593543950335
  Bound result 2708279941025886150459427
  Bound result 56397649989265019975717152653
  Bound result 50219907298816095197522495815
  Bound result 74476591235050584890350451830
  Bound result 18722674334398019794365877644
  Bound result 6282
  Bound result 8834895133645099935931352665
  Bound result 55546853969439722015318625249
  Bound result 76129942682455186120587153778
  Bound result 122
  Bound result 7009
  Bound result 186717035138461416429131
  Bound result 79228162514264337593543950335
  Bound result 54084272447155761385980892273
  Bound result 53759094603279446158905767551
  Bound result 391
  Bound result 14932024953589989376
  Bound result 2003
  Bound result 29931378951207778915598368192
  Bound result 15129688371239599643615801308
  Bound result 19470912161176336421951390272
  Bound result 5891
  Bound result 8281
  Bound result 1
  Bound result 1424450962880151377261
  Bound result 7951
  Bound result 62419517304356185715547587550
  Bound result 8817
  Bound result 254411715014910216
  Bound result 67169260542587426986660729014
  Bound result 2778737196835722347744
  Bound result 35123596214138384875977919733
  Bound result 74211512565728134509806589047
  Bound result 4027
  Bound result 2876
  Bound result 3062
  Bound result 59017970060286535962943600738
  Bound result 564691222120170070571
  Bound result 46499050927858519520878806453
  Bound result 3900035949893341992487825
  Bound result 315
  Bound result 17196277854672597047653258223
  Bound result 8784
  Bound result 75941055603200923221922889961
  Bound result 345
  Bound result 70336174930899744666975039172
  Bound result 74900269669966743384828993038
  Bound result 3874125389976
  Bound result 200000000000

Traces:
  [139150] Handler::depositCollateral(143397512589272231858192 [1.433e23], 4575214724000715327473984116060499469318337 [4.575e42])
    ├─ [0] console::log("Bound result", 23426406477585898314935737852 [2.342e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001B96, 23426406477585898314935737852 [2.342e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001B96, value: 23426406477585898314935737852 [2.342e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001B96)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 23426406477585898314935737852 [2.342e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001B96, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 23426406477585898314935737852 [2.342e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001B96)
    │   └─ ← [Return]
    ├─ [60395] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 23426406477585898314935737852 [2.342e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001B96, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 23426406477585898314935737852 [2.342e28])
    │   ├─ [26814] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001B96, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 23426406477585898314935737852 [2.342e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001B96, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 23426406477585898314935737852 [2.342e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(6063)
    ├─ [0] console::log("Bound result", 6063) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000001ed0) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(6063, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [137669] Handler::depositCollateral(3, 2)
    ├─ [0] console::log("Bound result", 2) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x04D3cCe58d984043C3E62B37Af0852382959CF38, 2)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x04D3cCe58d984043C3E62B37Af0852382959CF38, value: 2)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x04D3cCe58d984043C3E62B37Af0852382959CF38)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2)
    │   ├─ emit Approval(owner: 0x04D3cCe58d984043C3E62B37Af0852382959CF38, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x04D3cCe58d984043C3E62B37Af0852382959CF38)
    │   └─ ← [Return]
    ├─ [60395] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 2)
    │   ├─ emit CollateralDeposited(user: 0x04D3cCe58d984043C3E62B37Af0852382959CF38, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 2)
    │   ├─ [26814] ERC20Mock::transferFrom(0x04D3cCe58d984043C3E62B37Af0852382959CF38, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2)
    │   │   ├─ emit Transfer(from: 0x04D3cCe58d984043C3E62B37Af0852382959CF38, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(2807, 5)
    ├─ [0] console::log("Bound result", 5) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000413612F0C94a5E994940351, 5)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000413612F0C94a5E994940351, value: 5)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000413612F0C94a5E994940351)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5)
    │   ├─ emit Approval(owner: 0x00000000000000000413612F0C94a5E994940351, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000413612F0C94a5E994940351)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 5)
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000413612F0C94a5E994940351, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 5)
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000413612F0C94a5E994940351, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5)
    │   │   ├─ emit Transfer(from: 0x00000000000000000413612F0C94a5E994940351, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(6146)
    ├─ [0] console::log("Bound result", 6146) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000005B8) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(6146, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(1953)
    ├─ [0] console::log("Bound result", 1953) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000234) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1953, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(481453084754039622327461281519035319338 [4.814e38], 39347165115545972422324870275120020 [3.934e34])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0xEDc8FB231729a07DE2874E9f730fE8af0f4b287E) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(3397, 8050)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x000000000000000091FBBdd220e671327539F5B7) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(325)
    ├─ [0] console::log("Bound result", 325) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000001bBf) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(325, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(103, 7787)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000Ba11847c365D653E8AE79c2E) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(106110967767623926456172851917066173773890199282152817230469348963945 [1.061e68])
    ├─ [0] console::log("Bound result", 468554426314852194399338305 [4.685e26]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000002443) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(468554426314852194399338305 [4.685e26], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(2319184589859468208115456846 [2.319e27], 128563288646061639801102222823819680285667 [1.285e41])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000013BFF94) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120579] Handler::depositCollateral(3411693879423836375768 [3.411e21], 94417706661926218 [9.441e16])
    ├─ [0] console::log("Bound result", 94417706661926218 [9.441e16]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000c3847835CDc9094530324b7A, 94417706661926218 [9.441e16])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000c3847835CDc9094530324b7A, value: 94417706661926218 [9.441e16])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000c3847835CDc9094530324b7A)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 94417706661926218 [9.441e16])
    │   ├─ emit Approval(owner: 0x0000000000000000c3847835CDc9094530324b7A, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 94417706661926218 [9.441e16])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000c3847835CDc9094530324b7A)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 94417706661926218 [9.441e16])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000c3847835CDc9094530324b7A, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 94417706661926218 [9.441e16])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000c3847835CDc9094530324b7A, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 94417706661926218 [9.441e16])
    │   │   ├─ emit Transfer(from: 0x0000000000000000c3847835CDc9094530324b7A, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 94417706661926218 [9.441e16])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(42519761 [4.251e7], 6380)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x23AE4118CFc7b8217A5DCD50E027a77486bA61C2) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120569] Handler::depositCollateral(9537, 5722)
    ├─ [0] console::log("Bound result", 5722) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001325, 5722)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001325, value: 5722)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001325)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5722)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001325, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5722)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001325)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 5722)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001325, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 5722)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001325, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5722)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001325, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5722)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(1515)
    ├─ [0] console::log("Bound result", 1515) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x05DB543Cbb3a86264cEF7871D4b2504056928ac3) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1515, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [65624] Handler::mintDsc(312377831930950282480985746815982749565174593279671878676 [3.123e56])
    ├─ [0] console::log("Bound result", 21457949947591930286457619466 [2.145e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000A49) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(21457949947591930286457619466 [2.145e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(6348, 23426406477680316021597664069 [2.342e28])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000003390F6) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(5524924708302562385806532904158279006110 [5.524e39], 744426094108076414427293021966011113340320078023267424555392153619412814347 [7.444e74])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000003f4) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(3273)
    ├─ [0] console::log("Bound result", 3273) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(3273, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(99999999999 [9.999e10], 157)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000000000000000000000000C93) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(4578, 808)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0xBE2Aaea663A01970D5070c94A8d02266c51d52A4) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(176071867168575165026120 [1.76e23])
    ├─ [0] console::log("Bound result", 176071867168575165026120 [1.76e23]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000009b5da7468FdB74774FCB0c13) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(176071867168575165026120 [1.76e23], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(143049429547876897188296508657669350 [1.43e35], 81599651888516246239505480553329865284735728013206009613492643874 [8.159e64])
    ├─ [0] console::log("Bound result", 26872985171108454442329333349 [2.687e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000343c99369386197a1C411534, 26872985171108454442329333349 [2.687e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000343c99369386197a1C411534, value: 26872985171108454442329333349 [2.687e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000343c99369386197a1C411534)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 26872985171108454442329333349 [2.687e28])
    │   ├─ emit Approval(owner: 0x0000000000000000343c99369386197a1C411534, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 26872985171108454442329333349 [2.687e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000343c99369386197a1C411534)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 26872985171108454442329333349 [2.687e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000343c99369386197a1C411534, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 26872985171108454442329333349 [2.687e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000343c99369386197a1C411534, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 26872985171108454442329333349 [2.687e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000343c99369386197a1C411534, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 26872985171108454442329333349 [2.687e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(3805730350632304211821795050730247454566390207642783264589 [3.805e57], 301040531122359121032114685497302784912566406084106045099110574033708 [3.01e68])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000E72e23Eb9966C99598A095F8) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(2219717782564539159696055305713109794655087352580711 [2.219e51])
    ├─ [0] console::log("Bound result", 2864944346500908670089066581 [2.864e27]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000008b8) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(2864944346500908670089066581 [2.864e27], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(0, 133148935822586383381079539129847588353945 [1.331e41])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000001DDF) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [122040] Handler::depositCollateral(340309570736822311 [3.403e17], 17084431232653281160743173104978887030164036971321258790984040306117 [1.708e67])
    ├─ [0] console::log("Bound result", 10530349394728893960333879327 [1.053e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000000201, 10530349394728893960333879327 [1.053e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000201, value: 10530349394728893960333879327 [1.053e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000201)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 10530349394728893960333879327 [1.053e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000000201, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 10530349394728893960333879327 [1.053e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000201)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 10530349394728893960333879327 [1.053e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000000201, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 10530349394728893960333879327 [1.053e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000000201, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 10530349394728893960333879327 [1.053e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000201, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 10530349394728893960333879327 [1.053e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(3957, 7592)
    ├─ [0] console::log("Bound result", 7592) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, 7592)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, value: 7592)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 7592)
    │   ├─ emit Approval(owner: 0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 7592)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 7592)
    │   ├─ emit CollateralDeposited(user: 0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 7592)
    │   ├─ [9714] ERC20Mock::transferFrom(0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 7592)
    │   │   ├─ emit Transfer(from: 0xAdBBDf713AFA5e16988c8C958FD1A1DaA9bf09f7, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 7592)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120579] Handler::depositCollateral(162, 1220)
    ├─ [0] console::log("Bound result", 1220) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000007cB, 1220)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000007cB, value: 1220)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000007cB)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 1220)
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000007cB, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 1220)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000007cB)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 1220)
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000007cB, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 1220)
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000007cB, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 1220)
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000007cB, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 1220)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(1069)
    ├─ [0] console::log("Bound result", 1069) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000006889882B9Db3562723e2c6F5) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1069, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(4469)
    ├─ [0] console::log("Bound result", 4469) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000002A3c) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(4469, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64766] Handler::mintDsc(0)
    ├─ [0] console::log("Bound result", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000016B8) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(2695, 42519761 [4.251e7])
    ├─ [0] console::log("Bound result", 42519761 [4.251e7]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000042108F61e15F6917AAecc820, 42519761 [4.251e7])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000042108F61e15F6917AAecc820, value: 42519761 [4.251e7])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000042108F61e15F6917AAecc820)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 42519761 [4.251e7])
    │   ├─ emit Approval(owner: 0x000000000000000042108F61e15F6917AAecc820, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 42519761 [4.251e7])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000042108F61e15F6917AAecc820)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 42519761 [4.251e7])
    │   ├─ emit CollateralDeposited(user: 0x000000000000000042108F61e15F6917AAecc820, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 42519761 [4.251e7])
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000042108F61e15F6917AAecc820, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 42519761 [4.251e7])
    │   │   ├─ emit Transfer(from: 0x000000000000000042108F61e15F6917AAecc820, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 42519761 [4.251e7])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(27837910631596268885 [2.783e19], 7299333199794344049720814190617281153753778739430768515867 [7.299e57])
    ├─ [0] console::log("Bound result", 46916350299036364971822585257 [4.691e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, 46916350299036364971822585257 [4.691e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, value: 46916350299036364971822585257 [4.691e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 46916350299036364971822585257 [4.691e28])
    │   ├─ emit Approval(owner: 0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 46916350299036364971822585257 [4.691e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 46916350299036364971822585257 [4.691e28])
    │   ├─ emit CollateralDeposited(user: 0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 46916350299036364971822585257 [4.691e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 46916350299036364971822585257 [4.691e28])
    │   │   ├─ emit Transfer(from: 0xC0eC34CFAb060B4cf634f378c6f0b4b57771D076, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 46916350299036364971822585257 [4.691e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(6185044457347878493571962140053209978295657316227685803293688498195135928249 [6.185e75], 4394713158243574 [4.394e15])
    ├─ [0] console::log("Bound result", 4394713158243574 [4.394e15]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000021C4, 4394713158243574 [4.394e15])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000021C4, value: 4394713158243574 [4.394e15])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000021C4)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 4394713158243574 [4.394e15])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000021C4, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 4394713158243574 [4.394e15])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000021C4)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 4394713158243574 [4.394e15])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000021C4, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 4394713158243574 [4.394e15])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000021C4, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 4394713158243574 [4.394e15])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000021C4, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 4394713158243574 [4.394e15])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(406431143858465243003142654034 [4.064e29], 2635457918594769420430794546225751337221132018 [2.635e45])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000002a9D) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(52663151322930652440074663493138570998236966154941998210335278917646386663 [5.266e73])
    ├─ [0] console::log("Bound result", 66620424383069200198470859218 [6.662e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000636839c0C2b992629cd7D68a) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(66620424383069200198470859218 [6.662e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(11842001079807454131318723298562984288552659070221657177603316 [1.184e61], 444192610 [4.441e8])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0xd61FD9b665798CBB4d0DC67e1A8EdfcEEE604253) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(3493, 344)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x000000000000000000000000000000000000040F) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(7468, 4237)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000000919) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(1264, 5471)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0xc64a17eE438d0795015ADdB493C640069a459BBa) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120569] Handler::depositCollateral(45200398070844275712885308514103724952026016423727968730964483121232940631323 [4.52e76], 330901009104711829 [3.309e17])
    ├─ [0] console::log("Bound result", 330901009104711829 [3.309e17]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000B5AB58DD, 330901009104711829 [3.309e17])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000B5AB58DD, value: 330901009104711829 [3.309e17])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000B5AB58DD)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 330901009104711829 [3.309e17])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000B5AB58DD, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 330901009104711829 [3.309e17])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000B5AB58DD)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 330901009104711829 [3.309e17])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000B5AB58DD, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 330901009104711829 [3.309e17])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000B5AB58DD, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 330901009104711829 [3.309e17])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000B5AB58DD, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 330901009104711829 [3.309e17])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(13657792794835827249471190261576143571503533972737835989517241467573566339 [1.365e73], 14766869053293557499627608006614957016063702208457113103449 [1.476e58])
    ├─ [0] console::log("Bound result", 1101272837832531049290894459 [1.101e27]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000000000000000000000000212E, 1101272837832531049290894459 [1.101e27])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000000000000000000000000212E, value: 1101272837832531049290894459 [1.101e27])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000000000000000000000000212E)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 1101272837832531049290894459 [1.101e27])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000212E, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 1101272837832531049290894459 [1.101e27])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000212E)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 1101272837832531049290894459 [1.101e27])
    │   ├─ emit CollateralDeposited(user: 0x000000000000000000000000000000000000212E, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 1101272837832531049290894459 [1.101e27])
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000000000000000000000000212E, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 1101272837832531049290894459 [1.101e27])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000212E, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 1101272837832531049290894459 [1.101e27])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120579] Handler::depositCollateral(46916350299036364971822585256 [4.691e28], 10015 [1.001e4])
    ├─ [0] console::log("Bound result", 10015 [1.001e4]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000002aE4, 10015 [1.001e4])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002aE4, value: 10015 [1.001e4])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002aE4)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 10015 [1.001e4])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002aE4, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 10015 [1.001e4])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002aE4)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 10015 [1.001e4])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000002aE4, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 10015 [1.001e4])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000002aE4, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 10015 [1.001e4])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000002aE4, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 10015 [1.001e4])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120579] Handler::depositCollateral(0, 16)
    ├─ [0] console::log("Bound result", 16) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000000000000000000000000040B, 16)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000000000000000000000000040B, value: 16)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000000000000000000000000040B)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 16)
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000040B, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 16)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000040B)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 16)
    │   ├─ emit CollateralDeposited(user: 0x000000000000000000000000000000000000040B, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 16)
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000000000000000000000000040B, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 16)
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000040B, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 16)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [103469] Handler::depositCollateral(2287, 2463)
    ├─ [0] console::log("Bound result", 2463) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000042108F61e15F6917AAecc820, 2463)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000042108F61e15F6917AAecc820, value: 2463)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000042108F61e15F6917AAecc820)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2463)
    │   ├─ emit Approval(owner: 0x000000000000000042108F61e15F6917AAecc820, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2463)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000042108F61e15F6917AAecc820)
    │   └─ ← [Return]
    ├─ [26195] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 2463)
    │   ├─ emit CollateralDeposited(user: 0x000000000000000042108F61e15F6917AAecc820, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 2463)
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000042108F61e15F6917AAecc820, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2463)
    │   │   ├─ emit Transfer(from: 0x000000000000000042108F61e15F6917AAecc820, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2463)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(3627)
    ├─ [0] console::log("Bound result", 3627) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000e1E3a2Faa493AbfEfcDAf975) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(3627, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(1921, 4195)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000000000000000000000002Af1) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(17354176424797652260485707475215350782029782488129055248670068413874058008979 [1.735e76])
    ├─ [0] console::log("Bound result", 59291862883235609632189568389 [5.929e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0xc40A0565603dEF2142cD379b61D7cB9Cf6F50814) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(59291862883235609632189568389 [5.929e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(1893, 703)
    ├─ [0] console::log("Bound result", 703) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000000000000000000000000029e, 703)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000000000000000000000000029e, value: 703)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000000000000000000000000029e)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 703)
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000029e, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 703)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000029e)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 703)
    │   ├─ emit CollateralDeposited(user: 0x000000000000000000000000000000000000029e, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 703)
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000000000000000000000000029e, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 703)
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000029e, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 703)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(42174737333069269439708655537908700 [4.217e34], 143829851813818542092734854868656390290527041016628 [1.438e50])
    ├─ [0] console::log("Bound result", 36546367675569193495948340828 [3.654e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000012bB, 36546367675569193495948340828 [3.654e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000012bB, value: 36546367675569193495948340828 [3.654e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000012bB)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 36546367675569193495948340828 [3.654e28])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000012bB, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 36546367675569193495948340828 [3.654e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000012bB)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 36546367675569193495948340828 [3.654e28])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000012bB, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 36546367675569193495948340828 [3.654e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000012bB, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 36546367675569193495948340828 [3.654e28])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000012bB, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 36546367675569193495948340828 [3.654e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(0, 139)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x423058eC0Dddb72F844b096b974eA5FE1d4E8133) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(478919649761448457367356798006092823331690 [4.789e41])
    ├─ [0] console::log("Bound result", 10978653575205358858764448985 [1.097e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000104) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(10978653575205358858764448985 [1.097e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(815409452051376420499298 [8.154e23])
    ├─ [0] console::log("Bound result", 815409452051376420499298 [8.154e23]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x89083992d2fE569682a97e2fdf9dA1F33275a24c) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(815409452051376420499298 [8.154e23], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(22126334737364188915107044851211535220035133008273987699010270598476494536703 [2.212e76], 1367)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000000000000000000000002769) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(4656346018328892889712343253 [4.656e27], 8100537568877436884830589238311719286876097301320994890261208 [8.1e60])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x000000000000000000000000000000000000102b) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [121800] Handler::depositCollateral(32300641417827758016057965821924989 [3.23e34], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    ├─ [0] console::log("Bound result", 79228162514264337593543950335 [7.922e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000004e1, 79228162514264337593543950335 [7.922e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000004e1, value: 79228162514264337593543950335 [7.922e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000004e1)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 79228162514264337593543950335 [7.922e28])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000004e1, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 79228162514264337593543950335 [7.922e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000004e1)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 79228162514264337593543950335 [7.922e28])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000004e1, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 79228162514264337593543950335 [7.922e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000004e1, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 79228162514264337593543950335 [7.922e28])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000004e1, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 79228162514264337593543950335 [7.922e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(2708279941025886150459427 [2.708e24])
    ├─ [0] console::log("Bound result", 2708279941025886150459427 [2.708e24]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000264f4) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(2708279941025886150459427 [2.708e24], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(233193250 [2.331e8], 464514218621644200725605001723605308 [4.645e35])
    ├─ [0] console::log("Bound result", 56397649989265019975717152653 [5.639e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000000325, 56397649989265019975717152653 [5.639e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000325, value: 56397649989265019975717152653 [5.639e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000325)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 56397649989265019975717152653 [5.639e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000000325, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 56397649989265019975717152653 [5.639e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000325)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 56397649989265019975717152653 [5.639e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000000325, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 56397649989265019975717152653 [5.639e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000000325, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 56397649989265019975717152653 [5.639e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000325, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 56397649989265019975717152653 [5.639e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(317, 305992084371895683299345594378831859334529564351789035 [3.059e53])
    ├─ [0] console::log("Bound result", 50219907298816095197522495815 [5.021e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000001302248226de5, 50219907298816095197522495815 [5.021e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000001302248226de5, value: 50219907298816095197522495815 [5.021e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000001302248226de5)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 50219907298816095197522495815 [5.021e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000001302248226de5, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 50219907298816095197522495815 [5.021e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000001302248226de5)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 50219907298816095197522495815 [5.021e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000001302248226de5, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 50219907298816095197522495815 [5.021e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000001302248226de5, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 50219907298816095197522495815 [5.021e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000001302248226de5, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 50219907298816095197522495815 [5.021e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(1901839840354838022442902718637304544688963804657587809248805017477886 [1.901e69], 371866183953233078558281758167943286843208013131215 [3.718e50])
    ├─ [0] console::log("Bound result", 74476591235050584890350451830 [7.447e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000006e79bb1013F066dd61551f23, 74476591235050584890350451830 [7.447e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000006e79bb1013F066dd61551f23, value: 74476591235050584890350451830 [7.447e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000006e79bb1013F066dd61551f23)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 74476591235050584890350451830 [7.447e28])
    │   ├─ emit Approval(owner: 0x00000000000000006e79bb1013F066dd61551f23, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 74476591235050584890350451830 [7.447e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000006e79bb1013F066dd61551f23)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 74476591235050584890350451830 [7.447e28])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000006e79bb1013F066dd61551f23, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 74476591235050584890350451830 [7.447e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000006e79bb1013F066dd61551f23, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 74476591235050584890350451830 [7.447e28])
    │   │   ├─ emit Transfer(from: 0x00000000000000006e79bb1013F066dd61551f23, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 74476591235050584890350451830 [7.447e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(4192444456084368011583 [4.192e21], 4986880913742538392303845738591363791711211319 [4.986e45])
    ├─ [0] console::log("Bound result", 18722674334398019794365877644 [1.872e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, 18722674334398019794365877644 [1.872e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, value: 18722674334398019794365877644 [1.872e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 18722674334398019794365877644 [1.872e28])
    │   ├─ emit Approval(owner: 0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 18722674334398019794365877644 [1.872e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 18722674334398019794365877644 [1.872e28])
    │   ├─ emit CollateralDeposited(user: 0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 18722674334398019794365877644 [1.872e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 18722674334398019794365877644 [1.872e28])
    │   │   ├─ emit Transfer(from: 0xAd4188223C5187FE6d4dd870Bc2eE48B86A8486A, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 18722674334398019794365877644 [1.872e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(21286 [2.128e4], 10066 [1.006e4])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000018a7) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(6282)
    ├─ [0] console::log("Bound result", 6282) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x000000000000000000000000000000000000006F) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(6282, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(5823247798998319391611646845956233425619135244962641902046184 [5.823e60], 62835484721572092278354142992734803609 [6.283e37])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000007b8) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(49570026339970126598257225360434439461228480205 [4.957e46])
    ├─ [0] console::log("Bound result", 8834895133645099935931352665 [8.834e27]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x96E013600C216689972197803680cF7A4227bc9e) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(8834895133645099935931352665 [8.834e27], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(677146285517936979043868696119224622359596383538342843079174633415545 [6.771e68], 15209913811868 [1.52e13])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x000000000000000000000000Bd54b0752E172Ae7) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(77814517325470205911140941194401928579557062014761831930645393041380819009408 [7.781e76], 1130)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000001778) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(2043438992 [2.043e9], 841)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x000000000000000042108F61e15F6917AAecc820) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [160181] Handler::mintDsc(4712699092774376118311938042593474059432494986250871041589731322934699 [4.712e69])
    ├─ [0] console::log("Bound result", 55546853969439722015318625249 [5.554e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000012bB) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 73092735351138386991896681656000 [7.309e31]
    ├─ [1721] DSCEngine::calculateHealthFactor(55546853969439722015318625249 [5.554e28], 73092735351138386991896681656000 [7.309e31]) [staticcall]
    │   └─ ← [Return] 657937669983541310678 [6.579e20]
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000012bB)
    │   └─ ← [Return]
    ├─ [90871] DSCEngine::mintDsc(55546853969439722015318625249 [5.554e28])
    │   ├─ [1930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [1930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   ├─ [49867] DecentralizedStableCoin::mint(0x00000000000000000000000000000000000012bB, 55546853969439722015318625249 [5.554e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000012bB, value: 55546853969439722015318625249 [5.554e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(1276970039853717420346513048305428048668474716013807069857 [1.276e57], 1246731267104631807220534645675003 [1.246e33])
    ├─ [0] console::log("Bound result", 76129942682455186120587153778 [7.612e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, 76129942682455186120587153778 [7.612e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, value: 76129942682455186120587153778 [7.612e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 76129942682455186120587153778 [7.612e28])
    │   ├─ emit Approval(owner: 0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 76129942682455186120587153778 [7.612e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 76129942682455186120587153778 [7.612e28])
    │   ├─ emit CollateralDeposited(user: 0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 76129942682455186120587153778 [7.612e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 76129942682455186120587153778 [7.612e28])
    │   │   ├─ emit Transfer(from: 0x8F3cf7aD23CD3CAdBD9735AFf958023239C6a062, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 76129942682455186120587153778 [7.612e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(122)
    ├─ [0] console::log("Bound result", 122) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000392) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(122, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(1311, 7009)
    ├─ [0] console::log("Bound result", 7009) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, 7009)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, value: 7009)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x44Aaeccb3ebCFa906dc583351e362B17E46D247c)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 7009)
    │   ├─ emit Approval(owner: 0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 7009)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x44Aaeccb3ebCFa906dc583351e362B17E46D247c)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 7009)
    │   ├─ emit CollateralDeposited(user: 0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 7009)
    │   ├─ [9714] ERC20Mock::transferFrom(0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 7009)
    │   │   ├─ emit Transfer(from: 0x44Aaeccb3ebCFa906dc583351e362B17E46D247c, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 7009)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(186717035138461416429131 [1.867e23])
    ├─ [0] console::log("Bound result", 186717035138461416429131 [1.867e23]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000cdF) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(186717035138461416429131 [1.867e23], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [121800] Handler::depositCollateral(45, 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    ├─ [0] console::log("Bound result", 79228162514264337593543950335 [7.922e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000000294, 79228162514264337593543950335 [7.922e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000294, value: 79228162514264337593543950335 [7.922e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000294)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 79228162514264337593543950335 [7.922e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000000294, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 79228162514264337593543950335 [7.922e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000294)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 79228162514264337593543950335 [7.922e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000000294, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 79228162514264337593543950335 [7.922e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000000294, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 79228162514264337593543950335 [7.922e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000294, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 79228162514264337593543950335 [7.922e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(326419955986832282791107385626784854074926086286460 [3.264e50], 40520042598318136632877730578934283188730813600575942549589563589362297233 [4.052e73])
    ├─ [0] console::log("Bound result", 54084272447155761385980892273 [5.408e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000017A1, 54084272447155761385980892273 [5.408e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000017A1, value: 54084272447155761385980892273 [5.408e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000017A1)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 54084272447155761385980892273 [5.408e28])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000017A1, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 54084272447155761385980892273 [5.408e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000017A1)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 54084272447155761385980892273 [5.408e28])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000017A1, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 54084272447155761385980892273 [5.408e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000017A1, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 54084272447155761385980892273 [5.408e28])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000017A1, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 54084272447155761385980892273 [5.408e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [65624] Handler::mintDsc(2831611573819490095075365591623295665435561034527694947670274558396 [2.831e66])
    ├─ [0] console::log("Bound result", 53759094603279446158905767551 [5.375e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000493) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(53759094603279446158905767551 [5.375e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120579] Handler::depositCollateral(10306 [1.03e4], 391)
    ├─ [0] console::log("Bound result", 391) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001Ede, 391)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001Ede, value: 391)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001Ede)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 391)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001Ede, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 391)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001Ede)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 391)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001Ede, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 391)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001Ede, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 391)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001Ede, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 391)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(2873, 93729839749016943605390412564357032994406143526064754098425810670593974992896 [9.372e76])
    ├─ [0] console::log("Bound result", 14932024953589989376 [1.493e19]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x5b278536828d6A1C1A95487a5ef7905Be65bA141, 14932024953589989376 [1.493e19])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x5b278536828d6A1C1A95487a5ef7905Be65bA141, value: 14932024953589989376 [1.493e19])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x5b278536828d6A1C1A95487a5ef7905Be65bA141)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 14932024953589989376 [1.493e19])
    │   ├─ emit Approval(owner: 0x5b278536828d6A1C1A95487a5ef7905Be65bA141, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 14932024953589989376 [1.493e19])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x5b278536828d6A1C1A95487a5ef7905Be65bA141)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 14932024953589989376 [1.493e19])
    │   ├─ emit CollateralDeposited(user: 0x5b278536828d6A1C1A95487a5ef7905Be65bA141, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 14932024953589989376 [1.493e19])
    │   ├─ [9714] ERC20Mock::transferFrom(0x5b278536828d6A1C1A95487a5ef7905Be65bA141, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 14932024953589989376 [1.493e19])
    │   │   ├─ emit Transfer(from: 0x5b278536828d6A1C1A95487a5ef7905Be65bA141, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 14932024953589989376 [1.493e19])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(1101272837832531049290894459 [1.101e27], 2003)
    ├─ [0] console::log("Bound result", 2003) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001e86, 2003)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001e86, value: 2003)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001e86)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2003)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001e86, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2003)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001e86)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 2003)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001e86, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 2003)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001e86, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2003)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001e86, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2003)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [65624] Handler::mintDsc(40500192375755802052372588476705364702762193253592 [4.05e49])
    ├─ [0] console::log("Bound result", 29931378951207778915598368192 [2.993e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x10bEf6c7e4B55FE91FE2f612Cd611B72e2336986) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(29931378951207778915598368192 [2.993e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [65624] Handler::mintDsc(3970541359508546939192849550422930117269980807904003 [3.97e51])
    ├─ [0] console::log("Bound result", 15129688371239599643615801308 [1.512e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000e27) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(15129688371239599643615801308 [1.512e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [65624] Handler::mintDsc(314150347908074167315479916033056801916454068170549221778998927370773656192 [3.141e74])
    ├─ [0] console::log("Bound result", 19470912161176336421951390272 [1.947e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000007FCdd9bc97BF6) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(19470912161176336421951390272 [1.947e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(673353401750063818748395068639443 [6.733e32], 5891)
    ├─ [0] console::log("Bound result", 5891) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000000963, 5891)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000963, value: 5891)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000963)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5891)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000000963, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5891)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000963)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 5891)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000000963, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 5891)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000000963, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 5891)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000963, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 5891)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(506384515515169317076042 [5.063e23], 1820421172493618 [1.82e15])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x000000000000000000000000000000000000009F) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120579] Handler::depositCollateral(3506, 8281)
    ├─ [0] console::log("Bound result", 8281) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000002562, 8281)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000002562, value: 8281)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002562)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 8281)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000002562, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 8281)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000002562)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 8281)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000002562, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 8281)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000002562, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 8281)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000002562, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 8281)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64766] Handler::mintDsc(0)
    ├─ [0] console::log("Bound result", 1) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000b53) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(1424450962880151377261 [1.424e21])
    ├─ [0] console::log("Bound result", 1424450962880151377261 [1.424e21]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x000000000000000000000000776274633a1fFffF) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(1424450962880151377261 [1.424e21], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(7951)
    ├─ [0] console::log("Bound result", 7951) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000018a8) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(7951, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [65624] Handler::mintDsc(2910634830962468532501969259820685523117679659213090482255002269995 [2.91e66])
    ├─ [0] console::log("Bound result", 62419517304356185715547587550 [6.241e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000018C4) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(62419517304356185715547587550 [6.241e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(6853, 6337)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x536feC536EF21A058164027528A78dF9A2B837a8) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120579] Handler::depositCollateral(2552, 8817)
    ├─ [0] console::log("Bound result", 8817) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001A9a, 8817)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001A9a, value: 8817)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001A9a)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 8817)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001A9a, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 8817)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001A9a)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 8817)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001A9a, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 8817)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001A9a, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 8817)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001A9a, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 8817)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(254411715014910216 [2.544e17])
    ├─ [0] console::log("Bound result", 254411715014910216 [2.544e17]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000001feD) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(254411715014910216 [2.544e17], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(115792089237316195423570985008687907853269984665640564039457584007913129639932 [1.157e77], 4942946027719579 [4.942e15])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000012C1) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(2241222923641697336712386281549567246345061213758497270963934059 [2.241e63])
    ├─ [0] console::log("Bound result", 67169260542587426986660729014 [6.716e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x000000000000000000000000Bd54b0752E172Ae7) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(67169260542587426986660729014 [6.716e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(0, 2635378380917700655852902723198566970788804300453428959280537997235294 [2.635e69])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000FFffffFFfFffFFFffFfFFFfd) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(333639870527476942309355999012002341433241899 [3.336e44], 33620657080697305314947 [3.362e22])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000000000000000000000002964) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(2778737196835722347744 [2.778e21])
    ├─ [0] console::log("Bound result", 2778737196835722347744 [2.778e21]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x8d20AB731F2734A0b4AB1084F9400996e5242eA8) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(2778737196835722347744 [2.778e21], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(912, 10777 [1.077e4])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000413612F0C94a5E994940351) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [122050] Handler::depositCollateral(115792089237316195423570985008687907853269984665640564039457584007913129639934 [1.157e77], 41164985697737268268176526115522015589381847233396714416469503 [4.116e61])
    ├─ [0] console::log("Bound result", 35123596214138384875977919733 [3.512e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000000761, 35123596214138384875977919733 [3.512e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000000761, value: 35123596214138384875977919733 [3.512e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000761)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 35123596214138384875977919733 [3.512e28])
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000000761, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 35123596214138384875977919733 [3.512e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000000761)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 35123596214138384875977919733 [3.512e28])
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000000761, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 35123596214138384875977919733 [3.512e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000000761, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 35123596214138384875977919733 [3.512e28])
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000761, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 35123596214138384875977919733 [3.512e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [65624] Handler::mintDsc(10611557126962885034451151983602 [1.061e31])
    ├─ [0] console::log("Bound result", 74211512565728134509806589047 [7.421e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000000136) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(74211512565728134509806589047 [7.421e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(4027)
    ├─ [0] console::log("Bound result", 4027) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x45D653C35CAfe404C0E040910cfA2e4403038c18) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(4027, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(8415, 2876)
    ├─ [0] console::log("Bound result", 2876) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000002f59C9026489e8d21e5085cb, 2876)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000002f59C9026489e8d21e5085cb, value: 2876)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000002f59C9026489e8d21e5085cb)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2876)
    │   ├─ emit Approval(owner: 0x00000000000000002f59C9026489e8d21e5085cb, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2876)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000002f59C9026489e8d21e5085cb)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 2876)
    │   ├─ emit CollateralDeposited(user: 0x00000000000000002f59C9026489e8d21e5085cb, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 2876)
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000002f59C9026489e8d21e5085cb, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 2876)
    │   │   ├─ emit Transfer(from: 0x00000000000000002f59C9026489e8d21e5085cb, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 2876)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [64153] Handler::mintDsc(3062)
    ├─ [0] console::log("Bound result", 3062) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000001469) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(3062, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(1534195306365715381944428511123337923000 [1.534e39], 169693992468081 [1.696e14])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000007Ee) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(63325536353314057904552969429161784350608663400761928388314513 [6.332e61])
    ├─ [0] console::log("Bound result", 59017970060286535962943600738 [5.901e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000c79bf6Be0F1683) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(59017970060286535962943600738 [5.901e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120579] Handler::depositCollateral(1001466513906889167432586378538335019730157992352 [1.001e48], 564691222120170070571 [5.646e20])
    ├─ [0] console::log("Bound result", 564691222120170070571 [5.646e20]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, 564691222120170070571 [5.646e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, value: 564691222120170070571 [5.646e20])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x4247bb57D69C047be376d29a1fCC047C63CAd9ff)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 564691222120170070571 [5.646e20])
    │   ├─ emit Approval(owner: 0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 564691222120170070571 [5.646e20])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x4247bb57D69C047be376d29a1fCC047C63CAd9ff)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 564691222120170070571 [5.646e20])
    │   ├─ emit CollateralDeposited(user: 0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 564691222120170070571 [5.646e20])
    │   ├─ [9714] ERC20Mock::transferFrom(0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 564691222120170070571 [5.646e20])
    │   │   ├─ emit Transfer(from: 0x4247bb57D69C047be376d29a1fCC047C63CAd9ff, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 564691222120170070571 [5.646e20])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(211352473145245088001634989053800361440387022449624888906 [2.113e56], 177397841081060804847335671214209894558341360 [1.773e44])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x64537461626c65436F696DfFFFffFffFFFfFffFF) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [65624] Handler::mintDsc(3695698189856915718506463763053307408638 [3.695e39])
    ├─ [0] console::log("Bound result", 46499050927858519520878806453 [4.649e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000000000000000000000000009B6) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(46499050927858519520878806453 [4.649e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(3900035949893341992487825 [3.9e24])
    ├─ [0] console::log("Bound result", 3900035949893341992487825 [3.9e24]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x6309122c61AAeaa22B1bCe0011AD6686ECb3BadE) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(3900035949893341992487825 [3.9e24], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [120569] Handler::depositCollateral(11629 [1.162e4], 315)
    ├─ [0] console::log("Bound result", 315) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x0000000000000000000000000000000000001b4D, 315)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x0000000000000000000000000000000000001b4D, value: 315)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001b4D)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 315)
    │   ├─ emit Approval(owner: 0x0000000000000000000000000000000000001b4D, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 315)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x0000000000000000000000000000000000001b4D)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 315)
    │   ├─ emit CollateralDeposited(user: 0x0000000000000000000000000000000000001b4D, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 315)
    │   ├─ [9714] ERC20Mock::transferFrom(0x0000000000000000000000000000000000001b4D, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 315)
    │   │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000001b4D, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 315)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [65624] Handler::mintDsc(208469075071529167511784641494900805593463 [2.084e41])
    ├─ [0] console::log("Bound result", 17196277854672597047653258223 [1.719e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000B6e53E3273FE44E90B6a0D2f) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(17196277854672597047653258223 [1.719e28], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(205512984704555443001499907883206197890 [2.055e38], 144491243466100103325179157191454538086903684848264705166832 [1.444e59])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000000A37) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(81496501429942949100232087358260850243539962230174508193 [8.149e55], 37365476121880742623358666626711002088352986959823177 [3.736e52])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0A99448eaD783df8f5459786b2f49773BC47Ca71) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(8784)
    ├─ [0] console::log("Bound result", 8784) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x86dcB18823Edb8a15CfA50C833d9332F65F806F6) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(8784, 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [122050] Handler::depositCollateral(4452007292928887554414382064421264828 [4.452e36], 130741655007080067992816556449709349199668783641 [1.307e47])
    ├─ [0] console::log("Bound result", 75941055603200923221922889961 [7.594e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000000000000000000000000212a, 75941055603200923221922889961 [7.594e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000000000000000000000000212a, value: 75941055603200923221922889961 [7.594e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000000000000000000000000212a)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 75941055603200923221922889961 [7.594e28])
    │   ├─ emit Approval(owner: 0x000000000000000000000000000000000000212a, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 75941055603200923221922889961 [7.594e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000000000000000000000000212a)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 75941055603200923221922889961 [7.594e28])
    │   ├─ emit CollateralDeposited(user: 0x000000000000000000000000000000000000212a, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 75941055603200923221922889961 [7.594e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000000000000000000000000212a, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 75941055603200923221922889961 [7.594e28])
    │   │   ├─ emit Transfer(from: 0x000000000000000000000000000000000000212a, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 75941055603200923221922889961 [7.594e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(9571178873139543424179905 [9.571e24], 115792089237316195423570985008687907853269984665640564039457584007913129639932 [1.157e77])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x0000000000000000Ff1f276eFe4Fcc553a063c13) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(191967532085885717337773050 [1.919e26], 1281407676280154542960829211929282245 [1.281e36])
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000B6244c54EbA23CDb33F4771f) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [120579] Handler::depositCollateral(496, 345)
    ├─ [0] console::log("Bound result", 345) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x000000000000000094d813263FbD3DBb8126c21D, 345)
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x000000000000000094d813263FbD3DBb8126c21D, value: 345)
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x000000000000000094d813263FbD3DBb8126c21D)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 345)
    │   ├─ emit Approval(owner: 0x000000000000000094d813263FbD3DBb8126c21D, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 345)
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x000000000000000094d813263FbD3DBb8126c21D)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 345)
    │   ├─ emit CollateralDeposited(user: 0x000000000000000094d813263FbD3DBb8126c21D, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 345)
    │   ├─ [9714] ERC20Mock::transferFrom(0x000000000000000094d813263FbD3DBb8126c21D, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 345)
    │   │   ├─ emit Transfer(from: 0x000000000000000094d813263FbD3DBb8126c21D, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 345)
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(1422, 2077)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000000000000000000000002C5) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(23426406477585898414935737852 [2.342e28], 4470)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x00000000000000000A6f4Af6387B57fa99203F74) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [122050] Handler::depositCollateral(524525089853290521361117806005900336483694237580 [5.245e47], 14283119931722815326313013285188077745008510142 [1.428e46])
    ├─ [0] console::log("Bound result", 70336174930899744666975039172 [7.033e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0x00000000000000000000000000000000000028e5, 70336174930899744666975039172 [7.033e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0x00000000000000000000000000000000000028e5, value: 70336174930899744666975039172 [7.033e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0x00000000000000000000000000000000000028e5)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 70336174930899744666975039172 [7.033e28])
    │   ├─ emit Approval(owner: 0x00000000000000000000000000000000000028e5, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 70336174930899744666975039172 [7.033e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0x00000000000000000000000000000000000028e5)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 70336174930899744666975039172 [7.033e28])
    │   ├─ emit CollateralDeposited(user: 0x00000000000000000000000000000000000028e5, token: ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], amount: 70336174930899744666975039172 [7.033e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0x00000000000000000000000000000000000028e5, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 70336174930899744666975039172 [7.033e28])
    │   │   ├─ emit Transfer(from: 0x00000000000000000000000000000000000028e5, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 70336174930899744666975039172 [7.033e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [122040] Handler::depositCollateral(12342987 [1.234e7], 23843349023949268021448014093538 [2.384e31])
    ├─ [0] console::log("Bound result", 74900269669966743384828993038 [7.49e28]) [staticcall]
    │   └─ ← [Stop]
    ├─ [30191] ERC20Mock::mint(0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, 74900269669966743384828993038 [7.49e28])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: 0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, value: 74900269669966743384828993038 [7.49e28])
    │   └─ ← [Stop]
    ├─ [0] VM::prank(0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2)
    │   └─ ← [Return]
    ├─ [25296] ERC20Mock::approve(DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 74900269669966743384828993038 [7.49e28])
    │   ├─ emit Approval(owner: 0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, spender: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 74900269669966743384828993038 [7.49e28])
    │   └─ ← [Return] true
    ├─ [0] VM::prank(0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2)
    │   └─ ← [Return]
    ├─ [43295] DSCEngine::depositCollateral(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 74900269669966743384828993038 [7.49e28])
    │   ├─ emit CollateralDeposited(user: 0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, token: ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], amount: 74900269669966743384828993038 [7.49e28])
    │   ├─ [9714] ERC20Mock::transferFrom(0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], 74900269669966743384828993038 [7.49e28])
    │   │   ├─ emit Transfer(from: 0xbfCEfb6EB3427e18986Be2A8B34bdeED52D242A2, to: DSCEngine: [0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512], value: 74900269669966743384828993038 [7.49e28])
    │   │   └─ ← [Return] true
    │   └─ ← [Stop]
    └─ ← [Stop]

  [11783] Handler::redeemCollateral(4095339163 [4.095e9], 8046)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76], 0x000000000000000000d3f9430522718685B1d16E) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [64153] Handler::mintDsc(3874125389976 [3.874e12])
    ├─ [0] console::log("Bound result", 3874125389976 [3.874e12]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x0000000000000000000000000000000000001E59) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 0
    ├─ [1721] DSCEngine::calculateHealthFactor(3874125389976 [3.874e12], 0) [staticcall]
    │   └─ ← [Return] 0
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [64153] Handler::mintDsc(200000000000 [2e11])
    ├─ [0] console::log("Bound result", 200000000000 [2e11]) [staticcall]
    │   └─ ← [Stop]
    ├─ [48358] DSCEngine::getAccountInformation(0x00000000000000002f59C9026489e8d21e5085cb) [staticcall]
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 200000000000 [2e11], 1, 1, 1
    │   ├─ [9930] MockV3Aggregator::latestRoundData() [staticcall]
    │   │   └─ ← [Return] 1, 100000000000 [1e11], 1, 1, 1
    │   └─ ← [Return] 0, 2876000 [2.876e6]
    ├─ [1721] DSCEngine::calculateHealthFactor(200000000000 [2e11], 2876000 [2.876e6]) [staticcall]
    │   └─ ← [Return] 7190000000000 [7.19e12]
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    └─ ← [Stop]

  [11793] Handler::redeemCollateral(978, 732)
    ├─ [3225] DSCEngine::getCollateralBalanceOfUser(ERC20Mock: [0x90193C961A926261B756D1E5bb255e67ff9498A1], 0x0000000000000000000000000000000000000198) [staticcall]
    │   └─ ← [Return] 0
    └─ ← [Stop]

  [21761] Invariants::invariant_getterFunctionsNeverRevert()
    ├─ [355] DSCEngine::getAdditionalFeedPrecision() [staticcall]
    │   └─ ← [Return] 10000000000 [1e10]
    ├─ [377] DSCEngine::getPrecision() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [444] DSCEngine::getLiquidationThreshold() [staticcall]
    │   └─ ← [Return] 50
    ├─ [355] DSCEngine::getLiquidationBonus() [staticcall]
    │   └─ ← [Return] 10
    ├─ [377] DSCEngine::getLiquidationPrecision() [staticcall]
    │   └─ ← [Return] 100
    ├─ [8059] DSCEngine::getCollateralTokens() [staticcall]
    │   └─ ← [Return] [0x90193C961A926261B756D1E5bb255e67ff9498A1, 0xDB8cFf278adCCF9E9b5da745B44E754fC4EE3C76]
    ├─ [465] DSCEngine::getMinHealthFactor() [staticcall]
    │   └─ ← [Return] 1000000000000000000 [1e18]
    ├─ [491] DSCEngine::getDscAddress() [staticcall]
    │   └─ ← [Return] DecentralizedStableCoin: [0x5FbDB2315678afecb367f032d93F642f64180aa3]
    └─ ← [Stop]

Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 4.04s (4.04s CPU time)

Ran 1 test suite in 4.05s (4.04s CPU time): 1 tests passed, 0 failed, 0 skipped (1 total tests)
